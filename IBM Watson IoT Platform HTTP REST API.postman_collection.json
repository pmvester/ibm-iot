{
	"info": {
		"_postman_id": "7341361b-90f6-430a-99c5-32ffef87dbc4",
		"name": "IBM Watson IoT Platform HTTP REST API",
		"description": "The Information Management capabilities of IBM® Watson™ IoT Platform help\nyou to organize and integrate data coming in to and going out of Watson IoT\nPlatform.  \n\nWith these APIs you will be able to:\n\n  - Work with device state regardless of whether the actual device on online\n    or offline.\n  - Provide your application developers with consistent interfaces to access\n    event-driven device data in a REST-like manner.\n  - Normalize data from devices of different makes or models that publish\n    data in different formats\n\nFor information on how to use Watson IoT Platform APIs generally see \n[the API documentation](https://console.ng.bluemix.net/docs/services/IoT/reference/api.html).\n\nFor more general information on how to use Watson IoT Platform see\n[the general documentation](https://console.ng.bluemix.net/docs/services/IoT/index.html#gettingstartedtemplate)\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Device Types",
			"item": [
				{
					"name": "List device types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types?_limit=25",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}",
									"disabled": true
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}",
									"disabled": true
								},
								{
									"key": "id",
									"value": "{{id}}",
									"disabled": true
								},
								{
									"key": "description",
									"value": "{{description}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.description",
									"value": "{{deviceInfo.description}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.descriptiveLocation",
									"value": "{{deviceInfo.descriptiveLocation}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.serialNumber",
									"value": "{{deviceInfo.serialNumber}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.deviceClass",
									"value": "{{deviceInfo.deviceClass}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.fwVersion",
									"value": "{{deviceInfo.fwVersion}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.hwVersion",
									"value": "{{deviceInfo.hwVersion}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.manufacturer",
									"value": "{{deviceInfo.manufacturer}}",
									"disabled": true
								},
								{
									"key": "deviceInfo.model",
									"value": "{{deviceInfo.model}}",
									"disabled": true
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}",
									"disabled": true
								},
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}",
									"disabled": true
								}
							]
						},
						"description": "Sorting can be performed on any of the following properties (sort\norder can be reversed by prefixing the property name with '-'):\n- id\n- description\n- deviceInfo.description\n- deviceInfo.descriptiveLocation\n- deviceInfo.serialNumber\n- deviceInfo.deviceClass\n- deviceInfo.fwVersion\n- deviceInfo.hwVersion\n- deviceInfo.manufacturer\n- deviceInfo.model\n\nThe following facets are supported:\n- deviceInfo.deviceClass\n- deviceInfo.fwVersion\n- deviceInfo.hwVersion\n- deviceInfo.manufacturer\n- deviceInfo.model\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against a device type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of a device type operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Performs the specified operation against the device type. The following\nvalues can be specified for the operation property:\n\n  - deactivate-configuration\n\nThe **deactivate-configuration** operation will remove any activate\nconfiguration that is currently associated with the device type. If any\ninstances of the device type exist, the state for those devices will be\ndeleted as a result of performing the **deactivate-configuration**\noperation. The **deactivate-configuration** operation will fail if\nany instances of the device type are being aggregated into an instance\nof a thing.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of active logical interfaces associated with the device\ntype\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the list of active logical interfaces that have been\nassociated with the device type.  At least one logical interface\nmust be associated with the device type before any mappings can be\ndefined that will generate state for the device.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of active property mappings for the device type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"mappings"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the list of active property mappings for the specified device\ntype.  A property mapping defines how properties from inbound events are\nmapped to properties defined on an logical interface associated with\nthe device type.\n"
					},
					"response": []
				},
				{
					"name": "Get the active property mappings for a specific logical interface\nfor a device type.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieves the active property mappings for a specific logical\ninterface for the device type.\n"
					},
					"response": []
				},
				{
					"name": "Get the active physical interface associated with the device type\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/physicalinterface",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"physicalinterface"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the active physical interface that has been associated with the\ndevice type.  At least one active physical interface must be associated\nwith the device type before any mappings can be defined that will\ngenerate state for the device.\n"
					},
					"response": []
				},
				{
					"name": "List device types associated with an logical or physical interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types?_bookmark={{_bookmark}}&_limit=25&logicalInterfaceId={{logicalInterfaceId}}&physicalInterfaceId={{physicalInterfaceId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieves the list of device types that are associated with the\nlogical interface and/or physical interface with the ids specified\nusing the corresponding query parameters.\n\nNote that at least one of the following query parameters must be\nspecified:\n\n  - logicalInterfaceId\n  - physicalInterfaceId\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against a draft device type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of a device type operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Performs the specified operation against the draft device type. The\nfollowing values can be specified for the operation property:\n\n  - validate-configuration\n  - activate-configuration\n  - list-differences\n\nThe **validate-configuration** operation will analyze all of the \nconfiguration associated with the draft device type to determine if it\nis valid.  If the configuration is invalid, a list of the issues will\nbe returned in the body of the response.  \n \nThe **activate-configuration** operation will make the configuration\nassociated with the draft device type active. The\n**activate-configuration** operation must have been performed against a\ndraft device type before any state is generated for instances of that\ntype.\n\nThe **list-differences** operation will return a list of the differences\nthat exist between the active configuration for the device type, if\nany, and the draft configuration.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of draft logical interfaces associated with the device\ntype\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the list of draft logical interfaces that have been\nassociated with the device type.  At least one active logical\ninterface must be associated with the device type before any mappings\ncan be defined that will generate state for the device.\n"
					},
					"response": []
				},
				{
					"name": "Associate a draft physical interface with the device type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft physical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/physicalinterface",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"physicalinterface"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Associates a draft physical interface with the specified device type.\nThe draft physical interface must already exist within the organization\nin the Watson IoT Platform. If a draft physical interface is already\nassociated with the device type it will be replaced with the specified\nphysical interface.\n"
					},
					"response": []
				},
				{
					"name": "Disassociate a draft logical interface from the device type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Disassociates the draft logical interface  with the specified id\nfrom the device type.\n\nPlease note the the delete will fail if the draft logical interface\nbeing removed from the device type is referenced in the property\nmappings for the device type.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of draft property mappings for the device type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"mappings"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the list of draft property mappings for the specified device\ntype.  A property mapping defines how properties from inbound events are\nmapped to properties defined on an logical interface associated with\nthe device type.\n"
					},
					"response": []
				},
				{
					"name": "Create the draft property mappings for a logical interface for the\ndevice type\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft device type property mappings."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"mappings"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Creates the draft property mappings for an logical interface for the\ndevice type.  The mapping object must specify:\n- The id for for the logical interface that the mappings are for\n- The mappings that define how to map from properties on the inbound\n  events to the properties on the logical interface.  The mappings\n  are keyed off of the event ids defined by the physical interface\n  associated with the device type.\n"
					},
					"response": []
				},
				{
					"name": "Delete the draft property mappings for a specific logical interface\nfor the device type.\n",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Deletes the draft property mappings for a specific logical interface\nfor the device type.\n"
					},
					"response": []
				},
				{
					"name": "Get the draft property mappings for a specific logical interface for\na device type.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieves the draft property mappings for a specific logical\ninterface for the device type.\n"
					},
					"response": []
				},
				{
					"name": "Update the draft property mappings for a specific logical interface\nfor the device type.\n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft device type property mappings."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Updates the draft property mappings for a specific logical interface\nfor the device type.\n"
					},
					"response": []
				},
				{
					"name": "Disassociate the draft physical interface from the device type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/physicalinterface",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"physicalinterface"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Disassociates the draft physical interface from the device type.\n"
					},
					"response": []
				},
				{
					"name": "Get the draft physical interface associated with the device type\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/physicalinterface",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"physicalinterface"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Retrieve the draft physical interface that has been associated with the\ndevice type.  At least one active physical interface must be associated\nwith the device type before any mappings can be defined that will\ngenerate state for the device.\n"
					},
					"response": []
				},
				{
					"name": "Associate a draft logical interface with the device type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft logical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/device/types/:typeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"device",
								"types",
								":typeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								}
							]
						},
						"description": "Associates a draft logical interface with the specified device type.\nThe draft logical interface must already exist within the organization\nin the Watson IoT Platform.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get the state for the device with the specified id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/devices/:deviceId/state/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"devices",
								":deviceId",
								"state",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the current state of the device with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against the device state for a logical interface\n",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of an operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/device/types/:typeId/devices/:deviceId/state/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"device",
								"types",
								":typeId",
								"devices",
								":deviceId",
								"state",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "typeId",
									"value": "{{typeId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Performs the specified operation against the device state for a logical\ninterface. The following values can be specified for the operation\nproperty:\n\n  - reset-state\n\nThe **reset-state** operation will reset the state of the specified\ndevice to the default values as defined by the schema for the logical\ninterface.\n"
					},
					"response": []
				}
			],
			"description": "Folder for device"
		},
		{
			"name": "Event Types",
			"item": [
				{
					"name": "Query draft event types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/event/types?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaId={{schemaId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"event",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Event types are used to model the events that are published to the\nWatson IoT Platform.  An event type must be created in an organization\nbefore more complex processing can be performed on the native event.\n\nThe **/draft/event/types** endpoint returns the list of all of the draft\nevent types that have been defined for the organization in the Watson\nIoT Platform.  Various query parameters can be used to filter, sort and\npage through the list of draft event types that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft event type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft event type."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/event/types",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"event",
								"types"
							]
						},
						"description": "Creates a new draft event type for the organization in the Watson IoT\nPlatform.  The draft event type must reference the schema definition\nthat defines the structure of the inbound MQTT event.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft event type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/event/types/:eventTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"event",
								"types",
								":eventTypeId"
							],
							"variable": [
								{
									"key": "eventTypeId",
									"value": "{{eventTypeId}}"
								}
							]
						},
						"description": "Deletes the draft event type with the specified id from the organization\nin the Watson IoT Platform.\n\nPlease note the the delete will fail if the draft event type is being \nreferenced by a physical interface.\n"
					},
					"response": []
				},
				{
					"name": "Get a draft event type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/event/types/:eventTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"event",
								"types",
								":eventTypeId"
							],
							"variable": [
								{
									"key": "eventTypeId",
									"value": "{{eventTypeId}}"
								}
							]
						},
						"description": "Retrieve the draft event type with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Update a draft event type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the event type."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/event/types/:eventTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"event",
								"types",
								":eventTypeId"
							],
							"variable": [
								{
									"key": "eventTypeId",
									"value": "{{eventTypeId}}"
								}
							]
						},
						"description": "Updates the draft event type with the specified id. The following\nproperties can be updated:\n\n  - name\n  - description\n  - schemaId\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the event\ntype.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Query active event types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/event/types?_limit=25",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"event",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}",
									"disabled": true
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}",
									"disabled": true
								},
								{
									"key": "name",
									"value": "{{name}}",
									"disabled": true
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}",
									"disabled": true
								}
							]
						},
						"description": "Event types are used to model the events that are published to the\nWatson IoT Platform.  An event type must be created in an organization\nbefore more complex processing can be performed on the native event.\n\nThe **/event/types** endpoint returns the list of all of the active\nevent types that have been defined for the organization in the Watson\nIoT Platform.  Various query parameters can be used to filter, sort and\npage through the list of active event types that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get an active event type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/event/types/:eventTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"event",
								"types",
								":eventTypeId"
							],
							"variable": [
								{
									"key": "eventTypeId",
									"value": "{{eventTypeId}}"
								}
							]
						},
						"description": "Retrieve the active event type with the specified id.\n"
					},
					"response": []
				}
			],
			"description": "Folder for event"
		},
		{
			"name": "Logical Interfaces",
			"item": [
				{
					"name": "Query draft logical interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaId={{schemaId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Logical interfaces are used to model the interfaces exposed by a\ndevice or thing in the Watson IoT Platform. A logical interface must\nreference a schema definition that defines the structure of the\nstate that will be stored for the device or thing.\n\nThe **logicalinterfaces** endpoint returns the list of all of the\ndraft logical interfaces that have been defined for the organization\nin the Watson IoT Platform.  Various query parameters can be used to\nfilter, sort and page through the list of draft logical interfaces\nthat are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft logical interface",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft logical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces"
							]
						},
						"description": "Creates a new draft logical interface for the organization in the\nWatson IoT Platform. The logical interface must reference a schema\ndefinition that defines the structure of the state that will be stored\nfor the device or thing.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft logical interface",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Deletes the draft logical interface with the specified id from the\norganization in the Watson IoT Platform.\n\nPlease note the the delete will fail if the draft logical interface\nis being referenced by a device type.\n"
					},
					"response": []
				},
				{
					"name": "Get a draft logical interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the draft logical interface with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against a draft logical interface",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Performs the specified operation against the draft logical\ninterface. The following values can be specified for the operation\nproperty:\n\n  - validate-configuration\n  - activate-configuration\n  - list-differences\n\nThe **validate-configuration** operation will analyze all of the \nconfiguration associated with the draft logical interface to\ndetermine if it is valid.  If the configuration is invalid, a list of \nthe issues will be returned in the body of the response.  \n \nThe **activate-configuration** operation will make the configuration\nassociated with the draft logical interface active. The \n**activate-configuration** operation must have been performed against\na draft logical interface before any state is generated for device\nor thing types that are associated with that logical interface.\n\nThe **list-differences** operation will return a list of the differences\nthat exist between the active configuration for the logical\ninterface, if any, and the draft configuration.\n"
					},
					"response": []
				},
				{
					"name": "Update a draft logical interface",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft logical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Updates the draft logical interface with the specified id. The\nfollowing properties can be updated: \n\n  - name\n  - description\n  - schemaId\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the logical\ninterface.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Query active logical interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/logicalinterfaces?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaId={{schemaId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"logicalinterfaces"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Logical interfaces are used to model the interfaces exposed by a\ndevice or thing in the Watson IoT Platform. A logical interface\nmust reference a schema definition that defines the structure of the\nstate that will be stored for the device or thing.\n\nThe **logicalinterfaces** endpoint returns the list of all of the\nactive logical interfaces that have been defined for the organization\nin the Watson IoT Platform.  Various query parameters can\nbe used to filter, sort and page through the list of active logical\ninterfaces that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get an active logical interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the active logical interface with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against a logical interface",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of an operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Performs the specified operation against the logical interface. The\nfollowing values can be specified for the operation property:\n\n  - deactivate-configuration\n\nThe **deactivate-configuration** operation will remove any active\nconfiguration that is currently associated with the logical\ninterface. If the logical interface is associated with any device\ntypes, the state for any instances of those device types will be deleted\nas a result of performing the **deactivate-configuration** operation.\nThe **deactivate-configuration** operation will fail if the logical\ninterface is referenced by a thing schema.\n"
					},
					"response": []
				}
			],
			"description": "Folder for logicalinterfaces"
		},
		{
			"name": "Physical Interfaces",
			"item": [
				{
					"name": "Query draft phyiscal interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								}
							]
						},
						"description": "Physical interfaces are used to model the interfaces between physical\ndevices and the Watson IoT Platform.  A physical interface references\nevent types.  Devices that implement a physical interface publish these\nevents to the platform.\n\nThe event types are referenced via a mapping that maps an event id to\nthe id of an event type.  The event id corresponds to the MQTT topic\nthat the event is published to by a device.\n\nThe **/draft/physicalinterfaces** endpoint returns the list of all of \nthe draft physical interfaces that have been defined for the\norganization in the Watson IoT Platform.  Various query parameters can\nbe used to filter, sort and page through the list of draft physical\ninterfaces that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft physical interface",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the physical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces"
							]
						},
						"description": "Creates a new draft physical interface for the organization in the \nWatson IoT Platform.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft physical interface",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Deletes the draft physical interface with the specified id from the\norganization in the Watson IoT Platform.\n\nPlease note the the delete will fail if the draft physical interface is\nbeing referenced  by a device type.\n"
					},
					"response": []
				},
				{
					"name": "Get a draft physical interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the draft physical interface with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Update a draft physical interface",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the physical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Updates the draft physical interface with the specified id. The \nfollowing properties can be updated:\n\n  - name\n  - description\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the physical\ninterface.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of event mappings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId/events",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId",
								"events"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the list of event mappings for the draft physical interface.\nEvent mappings are keyed off of the event id specified in the MQTT topic\nthat the inbound events are published to.\n"
					},
					"response": []
				},
				{
					"name": "Map an event to the draft physical interface",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the event mapping."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId/events",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId",
								"events"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Maps an event id to a specific event type for the draft specified\nphysical interface.\n"
					},
					"response": []
				},
				{
					"name": "Remove an event mapping from the draft physical interface",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/physicalinterfaces/:physicalInterfaceId/events/:eventId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"physicalinterfaces",
								":physicalInterfaceId",
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								},
								{
									"key": "eventId",
									"value": "{{eventId}}"
								}
							]
						},
						"description": "Removes the event mapping with the specified id from the draft physical\ninterface.\n"
					},
					"response": []
				},
				{
					"name": "Query active phyiscal interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/physicalinterfaces?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"physicalinterfaces"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								}
							]
						},
						"description": "Physical interfaces are used to model the interfaces between physical\ndevices and the Watson IoT Platform.  A physical interface references\nevent types.  Devices that implement a physical interface publish these\nevents to the platform.\n\nThe event types are referenced via a mapping that maps an event id to\nthe id of an event type.  The event id corresponds to the MQTT topic\nthat the event is published to by a device.\n\nThe **physicalinterfaces** endpoint returns the list of all of the\nactive physical interfaces that have been defined for the organization\nin the Watson IoT Platform.  Various query parameters can be used to\nfilter, sort and page through the list of active physical interfaces\nthat are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get an active physical interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/physicalinterfaces/:physicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"physicalinterfaces",
								":physicalInterfaceId"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the active physical interface with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of event mappings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/physicalinterfaces/:physicalInterfaceId/events",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"physicalinterfaces",
								":physicalInterfaceId",
								"events"
							],
							"variable": [
								{
									"key": "physicalInterfaceId",
									"value": "{{physicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the list of event mappings for the active physical interface.\nEvent mappings are keyed off of the event id specified in the MQTT topic\nthat the inbound events are published to.\n"
					},
					"response": []
				}
			],
			"description": "Folder for physicalinterfaces"
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "Query draft rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId/rules?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								}
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Rules allow you to specify conditions that can be used to trigger\nactions. For example, you might create a rule that sends an email if\nthe temperature of a device exceeds a certain value.\n\nRules are defined against a specific logical interface schema.  At\nruntime, a rule will be evaluated whenever the state for a Device that\nexposes the logical interface changes.\n\nThe **/draft/logicalinterfaces/{logicalInterfaceId}/rules** endpoint\nreturns the list of all of the draft rules that have been associated\nwith the logical interface. Various query parameters can be used to\nfilter, sort and page through the list of rules that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft rule."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId/rules",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Creates a new draft rule that is associated with the logical interface\nfor the organization in the Watson IoT Platform.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId/rules/:ruleId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules",
								":ruleId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Deletes the draft rule with the specified id from the organization in\nthe Watson IoT Platform.\n"
					},
					"response": []
				},
				{
					"name": "Get a draft rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId/rules/:ruleId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules",
								":ruleId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Retrieve the draft rule with the specified id that has been associated\nwith the specified logical interface.\n"
					},
					"response": []
				},
				{
					"name": "Update a draft rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft rule."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/logicalinterfaces/:logicalInterfaceId/rules/:ruleId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules",
								":ruleId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Updates the draft rule with the specified id. The following properties\ncan be updated: \n\n  - name\n  - description\n  - condition\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the rule.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Query active rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/logicalinterfaces/:logicalInterfaceId/rules?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								}
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Rules allow you to specify conditions that can be used to trigger\nactions. For example, you might create a rule that sends an email if\nthe temperature of a device exceeds a certain value.\n\nRules are defined against a specific logical interface schema.  At\nruntime, a rule will be evaluated whenever the state for a Device that\nexposes the logical interface changes.\n\nThe **/logicalinterfaces/{logicalInterfaceId}/rules** endpoint returns\nthe list of all of the active rules that have been associated with the\nlogical interface. Various query parameters can be used to filter, sort\nand page through the list of rules that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get an active rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/logicalinterfaces/:logicalInterfaceId/rules/:ruleId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"logicalinterfaces",
								":logicalInterfaceId",
								"rules",
								":ruleId"
							],
							"variable": [
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Retrieve the active rule with the specified id that has been associated\nwith the specified logical interface.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Schemas",
			"item": [
				{
					"name": "Query draft schema definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaType={{schemaType}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaType",
									"value": "{{schemaType}}"
								}
							]
						},
						"description": "Schemas are used to define the structure of Events, Device State and\nThing State in the Watson IoT Platform.\n\n  - For Events, they define the structure of the payload of the events\n    that are published to the platform by devices.\n\n  - For Device and Thing State, they define the structure of the state\n    that is stored by the platform.\n\nThe **/draft/schemas** endpoint returns the list of all of the draft \nschema for the organization in the Watson IoT Platform.  Various query\nparameters can be used to filter, sort and page through the list of\nschemas that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft schema definition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "{{description}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "schemaFile",
									"type": "file",
									"src": ""
								},
								{
									"key": "schemaType",
									"value": "json-schema",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas"
							]
						},
						"description": "Creates a new draft schema definition for the organization in the Watson\nIoT Platform.\n\nThe schema definition file is passed to the Watson IoT Platform within a\nmultipart POST (multipart/form-data).  The body of the POST **must**\ncontain at least two parts:\n\n  - One with a name of **schemaFile** that contains the actual content\n    of the file as the body of the part.\n    \n  - One with a name of **name** that contains a string that defines the\n    name of the schema resource in the body of the part.\n\nAdditional metadata can be passed in other parts within the multipart\nPOST.  For example, to specify a description for the new schema\ndefinition, you should include a part with the name **description** and\nthe description as the body of the part.  To specify the type of the\nschema, you should include a part with the name **schemaType** and one\nof the following in the body of the part (the schemaType defaults to\njson-schema if the no schemaType part is present):\n\n  - json-schema\n\nIf parts with names other than those specified above are included in the\nmultipart POST the request will fail and an HTTP status code of 400 will\nbe returned.\n\nThe content of the schema definition file that is passed to the platform\nis stored and a REST resource is created containing metadata that\ndescribes the schema definition.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft schema definition",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas/:schemaId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas",
								":schemaId"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Deletes the draft schema definition with the specified id from the\norganization in the Watson IoT Platform.  Deleting the schema definition\ndeletes both the metadata and the actual schema definition file from the\nWatson IoT Platform.\n\nPlease note the the delete will fail if the draft schema definition is\nbeing referenced by an event type or logical interface.\n"
					},
					"response": []
				},
				{
					"name": "Get draft schema definition metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas/:schemaId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas",
								":schemaId"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Retrieves the metadata for the draft schema definition with the\nspecified id.\n"
					},
					"response": []
				},
				{
					"name": "Update draft schema definition metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the schema definition."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas/:schemaId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas",
								":schemaId"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Updates the metadata for the draft schema definition with the specified\nid. The following properties can be updated:\n\n  - name\n  - description\n  \nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the schema\ndefinition.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - schemaType\n  - schemaFilename\n  - contentType\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe schemaFilename and contentType properties are updated when the\ncontent of the schema file is updated.\n\nThe values of the created, createdBy, updated, updatedBy and refs\nproperties are set on the server as a result of a successful update.\n"
					},
					"response": []
				},
				{
					"name": "Get the contents of the draft schema definition file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas/:schemaId/content",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas",
								":schemaId",
								"content"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Retrieves the content of the draft schema definition file with the\nspecified id.\n"
					},
					"response": []
				},
				{
					"name": "Update the content of a draft schema definition file",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "schemaFile",
									"value": "{{schemaFile}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/schemas/:schemaId/content",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"schemas",
								":schemaId",
								"content"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Updates the content of a draft schema definition file with the specified\nid.\n\nThe schema definition file is passed to the Watson IoT Platform within a\nmultipart POST (multipart/form-data).  The body of the POST **must**\ncontain one part with a name of the **schemaFile** and the\nactual schema file as the body of the part.\n\nPlease note that the schemaFilename and contentType properties of the\nschema definition will also be updated as a result of updating the\ncontent of the schema file.\n"
					},
					"response": []
				},
				{
					"name": "Query active schema definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/schemas?_limit=25",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"schemas"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}",
									"disabled": true
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}",
									"disabled": true
								},
								{
									"key": "name",
									"value": "{{name}}",
									"disabled": true
								},
								{
									"key": "schemaType",
									"value": "{{schemaType}}",
									"disabled": true
								}
							]
						},
						"description": "Schemas are used to define the structure of Events, Device State and\nThing State in the Watson IoT Platform.\n\n  - For Events, they define the structure of the payload of the events\n    that are published to the platform by devices.\n\n  - For Device and Thing State, they define the structure of the state\n    that is stored by the platform.\n\nThe **schemas** endpoint returns the list of all of the active schema \ndefinitions for the organization in the Watson IoT Platform.  Various\nquery parameters can be used to filter, sort and page through the list\nof schemas that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get active schema definition metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/schemas/:schemaId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"schemas",
								":schemaId"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Retrieves the metadata for the active schema definition with the\nspecified id.\n"
					},
					"response": []
				},
				{
					"name": "Get the contents of the active schema definition file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/schemas/:schemaId/content",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"schemas",
								":schemaId",
								"content"
							],
							"variable": [
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Retrieves the content of the active schema definition file with the\nspecified id.\n"
					},
					"response": []
				}
			],
			"description": "Folder for schemas"
		},
		{
			"name": "Thing Types",
			"item": [
				{
					"name": "Query draft thing types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaId={{schemaId}}&logicalInterfaceId={{logicalInterfaceId}}&aggregatedLogicalInterfaceId={{aggregatedLogicalInterfaceId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "aggregatedLogicalInterfaceId",
									"value": "{{aggregatedLogicalInterfaceId}}"
								}
							]
						},
						"description": "Within the Watson IoT Platform, a Thing allows you to aggregate one or\nmore instances of a Device or Thing together to represent a more coarse\ngrained object.  For example, you might aggregrate together a temperature\nsensor, flow sensor and power sensor together into a Boiler. \n\nThing Types are used to model Things.  The Schema associated with a\nThing Type defines the type of objects that are aggregated togther to\nmake up an instance of a Thing. A Thing Type must be created in an \norganization before in instance of a Thing can be created.\n\nThe **/draft/thing/types** endpoint returns the list of all of the draft\nThing types that have been defined for the organization in the Watson IoT\nPlatform. Various query parameters can be used to filter, sort and page\nthrough the list of draft Thing types that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a draft thing type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft thing type."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types"
							]
						},
						"description": "Creates a new draft thing type for the organization in the Watson IoT\nPlatform.  The thing type must reference the schema definition that\ndefines the structure of instances of the thing type.\n"
					},
					"response": []
				},
				{
					"name": "Delete a draft thing type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Deletes the draft thing type with the specified id from the organization\nin the Watson IoT Platform.\n\nPlease note the the delete will fail if there is an active version of the\nthing type or if the thing type is currently being referenced by another\nobject.\n"
					},
					"response": []
				},
				{
					"name": "Get a draft thing type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the draft thing type with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against a draft thing type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of a thing type operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Performs the specified operation against the draft thing type. The\nfollowing values can be specified for the operation property:\n\n  - validate-configuration\n  - activate-configuration\n  - list-differences\n\nThe **validate-configuration** operation will analyze all of the \nconfiguration associated with the draft thing type to determine if it is\nvalid.  If the configuration is invalid, a list of the issues will be\nreturned in the body of the response.  \n \nThe **activate-configuration** operation will make the configuration\nassociated with the draft thing type active. The \n**activate-configuration** operation must have been performed against a\ndraft thing type before any instances of that type can be created.\n\nThe **list-differences** operation will return a list of the differences\nthat exist between the active configuration for the thing type, if any,\nand the draft configuration.\n"
					},
					"response": []
				},
				{
					"name": "Update a draft thing type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the thing type."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Updates the draft thing type with the specified id. The following\nproperties can be updated:\n\n  - name\n  - description\n  - schemaId\n  - metadata\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the draft\nthing type.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - version\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  - refs\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of draft logical interfaces associated with the thing\ntype\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the list of draft logical interfaces that have been associated\nwith the draft thing type.  At least one logical interface must be\nassociated with the thing type before any mappings can be defined that\nwill generate state for the thing.\n"
					},
					"response": []
				},
				{
					"name": "Associate a draft logical interface with the draft thing type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the draft logical interface."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Associates a draft logical interface with the specified draft thing type.\nThe logical interface must already exist within the organization in the\nWatson IoT Platform.\n"
					},
					"response": []
				},
				{
					"name": "Disassociate a logical interface from the draft thing type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/logicalinterfaces/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"logicalinterfaces",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Disassociates the draft logical interface with the specified id from the\ndraft thing type.\n\nPlease note the the delete will fail if the logical interface being\nremoved from the draft thing type is referenced in the property mappings\nfor the draft thing type.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of draft property mappings for the thing type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"mappings"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the list of draft property mappings for the specified draft\nthing type.  A property mapping defines how properties from state update\nevents on aggregated devices or things are mapped to properties defined\non a logical interface associated with the thing type.\n"
					},
					"response": []
				},
				{
					"name": "Create the draft property mappings for a logical interface for the thing\ntype\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the thing type property mappings."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"mappings"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Creates the draft property mappings for a logical interface for the\nthing type.  The mapping object must specify:\n- The id for for the logical interface that the mappings are for\n- The mappings that define how to map from properties on the state\n  update events to the properties on the logical interface.  The\n  mappings are keyed off of the name of the internal properties of the\n  thing type.\n"
					},
					"response": []
				},
				{
					"name": "Delete the property mappings for a specific logical interface for\nthe draft thing type.\n",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Deletes the property mappings for a specific logical interface\nfor the draft thing type.\n"
					},
					"response": []
				},
				{
					"name": "Get the draft property mappings for a specific logical interface for\na thing type.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieves the draft property mappings for a specific logical interface\nfor the thing type.\n"
					},
					"response": []
				},
				{
					"name": "Update the property mappings for a specific logical interface for\nthe thing type.\n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the thing type property mappings."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/draft/thing/types/:thingTypeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"draft",
								"thing",
								"types",
								":thingTypeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Updates the property mappings for a specific logical interface\nfor the draft thing type.\n"
					},
					"response": []
				},
				{
					"name": "Query active thing types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types?_bookmark={{_bookmark}}&_limit=25&_sort={{_sort}}&name={{name}}&schemaId={{schemaId}}&logicalInterfaceId={{logicalInterfaceId}}&aggregatedLogicalInterfaceId={{aggregatedLogicalInterfaceId}}",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}"
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								},
								{
									"key": "aggregatedLogicalInterfaceId",
									"value": "{{aggregatedLogicalInterfaceId}}"
								}
							]
						},
						"description": "Within the Watson IoT Platform, a Thing allows you to aggregate one or\nmore instances of a Device or Thing together to represent a more coarse\ngrained object.  For example, you might aggregrate together a temperature\nsensor, flow sensor and power sensor together into a Boiler. \n\nThing Types are used to model Things.  The Schema associated with a\nThing Type defines the type of objects that are aggregated togther to\nmake up an instance of a Thing. A Thing Type must be created in an \norganization before in instance of a Thing can be created.\n\nThe **/thing/types** endpoint returns the list of all of the active\nThing types that have been defined for the organization in the Watson IoT\nPlatform. Various query parameters can be used to filter, sort and page\nthrough the list of Thing types that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Get an active thing type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the active thing type with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against an active thing type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of a thing type operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Performs the specified operation against the active thing type. The\nfollowing values can be specified for the operation property:\n\n  - deactivate-configuration\n\nThe **deactivate-configuration** operation will remove any active\nconfiguration that is currently associated with the thing type. The\n**deactivate-configuration** operation will fail if there are\nany instances of the thing type.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of active logical interfaces associated with the thing\ntype\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/logicalinterfaces",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"logicalinterfaces"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the list of active logical  interfaces that have been associated\nwith the thing type.  At least one logical interface must be associated\nwith the thing type before any mappings can be defined that will generate\nstate for the thing.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of active property mappings for the thing type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/mappings",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"mappings"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Retrieve the list of active property mappings for the specified thing\ntype.  A property mapping defines how properties from state update events\non aggregated devices or things are mapped to properties defined on a\nlogical interface associated with the thing type.\n"
					},
					"response": []
				},
				{
					"name": "Get the active property mappings for a specific logical interface for\na thing type.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/mappings/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"mappings",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieves the active property mappings for a specific logical interface\nfor the thing type.\n"
					},
					"response": []
				}
			],
			"description": "Folder for thing"
		},
		{
			"name": "Things",
			"item": [
				{
					"name": "List things",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types?_limit=25",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types"
							],
							"query": [
								{
									"key": "_bookmark",
									"value": "{{_bookmark}}",
									"disabled": true
								},
								{
									"key": "_limit",
									"value": "25"
								},
								{
									"key": "_sort",
									"value": "{{_sort}}",
									"disabled": true
								},
								{
									"key": "name",
									"value": "{{name}}",
									"disabled": true
								}
							]
						},
						"description": "Within the Watson IoT Platform, a Thing allows you to aggregate one or\nmore instances of a Device or Thing together to represent a more coarse\ngrained object.  For example, you might aggregrate together a\ntemperature sensor, flow sensor and power sensor together into a Boiler. \n\nThe **/thing/types/{thingTypeId}/things** endpoint returns the list of\nall of the Thing instances of the specified type that have been created\nfor the organization in the Watson IoT Platform. Various query\nparameters can be used to filter, sort and page through the list of\nThing instances that are returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a thing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Thing to be created"
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								}
							]
						},
						"description": "Creates a thing instance of the specified type for the organization in\nthe Watson IoT Platform. The thing type must have a valid set of   \nInformation Management metadata associated with it and activated before\nany instances can be created.\n"
					},
					"response": []
				},
				{
					"name": "Delete a thing",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things/:thingId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things",
								":thingId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "thingId",
									"value": "{{thingId}}"
								}
							]
						},
						"description": "Deletes the thing with the specified id from the organization in the \nWatson IoT Platform.\n\nPlease note the the delete will fail if the thing being deleted is \ncurrently being aggregated by other thing instances.\n"
					},
					"response": []
				},
				{
					"name": "Get a thing",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things/:thingId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things",
								":thingId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "thingId",
									"value": "{{thingId}}"
								}
							]
						},
						"description": "Retrieve the thing with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Update a thing",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of the thing."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things/:thingId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things",
								":thingId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "thingId",
									"value": "{{thingId}}"
								}
							]
						},
						"description": "Updates the thing with the specified id. The following properties\ncan be updated:\n\n  - name\n  - description\n  - metadata\n  - aggregatedObjects\n\nNote that if the description field is omitted from the body of the\nupdate, then any existing description will be removed from the thing\ntype.\n  \nAny changes made to the values of the following properties will be\nignored:\n\n  - created\n  - createdBy\n  - updated\n  - updatedBy\n  \nThe values of these properties are set on the server as a result of a\nsuccessful update.\n"
					},
					"response": []
				},
				{
					"name": "Get the state for the thing with the specified id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things/:thingId/state/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things",
								":thingId",
								"state",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "thingId",
									"value": "{{thingId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Retrieve the current state of the thing with the specified id.\n"
					},
					"response": []
				},
				{
					"name": "Perform an operation against the thing state for a logical interface\n",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The JSON representation of an operation."
						},
						"url": {
							"raw": "https://{{orgId}}.internetofthings.ibmcloud.com/api/v0002/thing/types/:thingTypeId/things/:thingId/state/:logicalInterfaceId",
							"protocol": "https",
							"host": [
								"{{orgId}}",
								"internetofthings",
								"ibmcloud",
								"com"
							],
							"path": [
								"api",
								"v0002",
								"thing",
								"types",
								":thingTypeId",
								"things",
								":thingId",
								"state",
								":logicalInterfaceId"
							],
							"variable": [
								{
									"key": "thingTypeId",
									"value": "{{thingTypeId}}"
								},
								{
									"key": "thingId",
									"value": "{{thingId}}"
								},
								{
									"key": "logicalInterfaceId",
									"value": "{{logicalInterfaceId}}"
								}
							]
						},
						"description": "Performs the specified operation against the thing state for a logical\ninterface. The following values can be specified for the operation\nproperty:\n\n  - reset-state\n\nThe **reset-state** operation will reset the state of the specified\nthing instance to the default values as defined by the schema for the\nlogical interface.\n"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{authToken}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b6fd21f0-3127-4c05-81c9-470da0679823",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c5f0a97a-be52-4187-9159-7852999f2917",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}